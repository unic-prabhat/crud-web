{"version":3,"sources":["include/Body.js","auth/auth.js","pages/Home.js","pages/CreateTodo.js","pages/TodoList.js","pages/ViewTodo.js","pages/EditTodo.js","pages/Register.js","pages/Login.js","pages/EmailVerification.js","pages/EmailVerificationMatch.js","App.js","reportWebVitals.js","index.js"],"names":["Body","Menu","secondary","Item","exact","to","Button","Container","this","props","children","Component","ProtectedRouteUser","component","rest","render","cookie","load","email_verification","pathname","state","from","location","Home","CreateTodo","handleSubmit","e","setState","loadingForm","axios","post","then","response","console","log","data","name","subject","gender","about","NotificationManager","success","history","push","warning","handleTextChnage","bind","target","value","Form","onSubmit","loading","Field","control","Input","label","placeholder","onChange","handleTxtChange","Group","grouped","type","checked","rows","TodoList","todos","handleDelete","id","get","color","height","width","Table","singleLine","Header","Row","HeaderCell","map","todo","style","_id","onClick","ViewTodo","match","params","EditTodo","TextArea","Register","email","phone","password","address","hanleTextChange","Grid","Column","widths","required","inline","Login","remove","path","expires","Date","setSeconds","save","message","Icon","Or","EmailVerification","userinfo","undefined","email_verification_code","EmailVerificationMatch","pageLoading","tempData","code","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af6b9a3a.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Container, Menu, Button } from 'semantic-ui-react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class Body extends Component{\r\n    render(){\r\n\r\n        return(\r\n            <>\r\n         <Menu secondary>\r\n                <Menu.Item>\r\n                  <Link exact to='/'><Button>Home</Button></Link>\r\n                </Menu.Item>    \r\n\r\n                <Menu.Item>\r\n                    <Link exact to='/todolist'><Button>TodoList</Button></Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item>\r\n                    <Link exact to='/createtodo'><Button>Create Todo</Button></Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item>\r\n                    <Link exact to='/register'><Button>Register</Button></Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item>\r\n                    <Link exact to='/login'><Button>Log In</Button></Link>\r\n                </Menu.Item>\r\n           </Menu>\r\n           <br/>\r\n           <Container>\r\n              {this.props.children}\r\n           </Container>\r\n\r\n              <footer>\r\n                    <p>Footer</p>\r\n               </footer>\r\n               \r\n            </>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport cookie from 'react-cookies'\r\n\r\n\r\nexport const ProtectedRouteUser = ({\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n\r\n        // const logindata = localStorage.getItem('userlogin') === 'true'\r\n        const logindata = cookie.load('userlogin') === 'true';\r\n  \r\n      \r\n        if (logindata) {\r\n\r\n          var data=cookie.load('userdata');\r\n\r\n\r\n          if(data.email_verification=='NotVerified'){\r\n            return <Redirect to=\"/emailverification\" />\r\n          }else{\r\n            return <Component {...props} />;\r\n          }\r\n\r\n\r\n        } else {\r\n\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: {\r\n                  from: props.location\r\n                }\r\n              }}\r\n            />\r\n          );\r\n\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};","import React, { Component } from 'react'\r\n\r\nexport default class Home extends Component{\r\n\r\n    render() {\r\n        return(\r\n            \r\n            <div>\r\n             Home Page\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { Button, Form, Input } from 'semantic-ui-react'\r\nimport {NotificationManager} from 'react-notifications';\r\nimport axios from 'axios';\r\n\r\nexport default class CreateTodo extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n         \r\n            loadingForm:false,\r\n            name:'',\r\n            subject:'Odia',\r\n            gender:'Male',\r\n            about:''\r\n        }\r\n\r\n        this.handleTextChnage = this.handleTextChnage.bind(this)\r\n    }\r\n\r\n\r\n    handleTextChnage(e){\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n\r\n        this.setState({\r\n            loadingForm:true\r\n        })\r\n\r\n        axios.post('https://crud-server.vercel.app/api/todo/store',this.state)\r\n        .then(response => {\r\n            console.log(response.data.response)\r\n            if(response.data.response){\r\n\r\n                this.setState({\r\n                    loadingForm:false,\r\n                    name:'',\r\n                    subject:'Odia',\r\n                    gender:'Male',\r\n                    about:''\r\n                })\r\n\r\n                NotificationManager.success('Success');\r\n                this.props.history.push('/todolist');\r\n\r\n            }else{\r\n\r\n                this.setState({\r\n                    loadingForm:false\r\n                })\r\n                NotificationManager.warning('Failed')\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n             <>\r\n             <h3>Create Todo</h3>\r\n             <Form onSubmit={this.handleSubmit} loading={this.state.loadingForm}> \r\n                <Form.Field  control={Input}  label='Name' placeholder='Full Name' name='name' value={this.state.name} onChange={this.handleTxtChange} />\r\n                \r\n                <Form.Field label='Subject' control='select' name='subject' value={this.state.subject} onChange={this.handleTxtChange} >\r\n                    <option value='Math'>Math</option>\r\n                    <option value='English'>English</option>\r\n                    <option value='Odia'>Odia</option>\r\n                    <option value='Hindi'>Hindi</option>\r\n                    <option value='History'>History</option>\r\n                </Form.Field>\r\n                 \r\n                <Form.Group grouped>\r\n                    <label>Gender</label>\r\n                    <Form.Field\r\n                        label='Male'\r\n                        control='input'\r\n                        type='radio'\r\n                        name='gender'\r\n                        value=\"Male\"\r\n                        checked={this.state.gender==='Male'?true:false}\r\n                        onChange={this.handleTextChnage}\r\n                    />\r\n                    <Form.Field\r\n                        label='Female'\r\n                        control='input'\r\n                        type='radio'\r\n                        name='gender'\r\n                        value=\"Female\"\r\n                        checked={this.state.gender==='Female'?true:false}\r\n                        onChange={this.handleTextChnage}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Field label='Address' control='TextArea' name='about' placeholder='Address' rows='3' value={this.state.about} onChange={this.handleTxtChange} />\r\n\r\n                <Form.Field control={Button}>Submit</Form.Field>\r\n            </Form>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport {Table} from 'semantic-ui-react'\r\nimport axios from 'axios'\r\nimport Loader from \"react-loader-spinner\";\r\nimport {Link} from 'react-router-dom';\r\nimport {NotificationManager} from 'react-notifications';\r\n\r\nexport default class TodoList extends Component {\r\n\r\n    state={\r\n        todos:false\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('https://crud-server.vercel.app/api/todo')\r\n        .then(response=>{\r\n            this.setState({\r\n                todos:response.data.data\r\n            })\r\n        })\r\n    }\r\n\r\n    handleDelete =id=>{\r\n        \r\n        axios.get(`https://crud-server.vercel.app/api/todo/delete/${id}`)\r\n        .then(response=>{\r\n\r\n            console.log(response)\r\n\r\n         if(response.data.response){\r\n             axios.get('https://crud-server.vercel.app/api/todo')\r\n             .then(response=>{\r\n                this.setState({\r\n                    todos:response.data.data\r\n                })\r\n             })\r\n\r\n             NotificationManager.success('Success') \r\n         }else{\r\n\r\n            NotificationManager.warning('Wrong ID')\r\n\r\n         }\r\n\r\n        })\r\n    } \r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            {this.state.todos===false\r\n                    ?\r\n                    <>\r\n                    <center>\r\n                    <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\r\n                    </center>\r\n                    </>\r\n                    :\r\n                    <>\r\n                    <Table singleLine>\r\n                        <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Name</Table.HeaderCell>\r\n                            <Table.HeaderCell>Subject</Table.HeaderCell>\r\n                            <Table.HeaderCell>Gender</Table.HeaderCell>\r\n                            <Table.HeaderCell>About</Table.HeaderCell>\r\n                            <Table.HeaderCell></Table.HeaderCell>\r\n                        </Table.Row>\r\n                        </Table.Header>\r\n\r\n                        <Table.Body>\r\n                            \r\n                            {this.state.todos.map((todo)=>{\r\n                                return(\r\n                                    <Table.Row>\r\n                                        <Table.HeaderCell>{todo.name}</Table.HeaderCell>\r\n                                        <Table.HeaderCell>{todo.subject}</Table.HeaderCell>\r\n                                        <Table.HeaderCell>{todo.gender}</Table.HeaderCell>\r\n                                        <Table.HeaderCell>{todo.about}</Table.HeaderCell>\r\n                                        <Table.HeaderCell>\r\n                                            <Link style={{color:'blue'}}  exact to={`/view/${todo._id}`}>View</Link>\r\n                                            &nbsp; <Link exact to={`/edit/${todo._id}`}>Edit</Link>\r\n                                            &nbsp; <Link onClick={()=>this.handleDelete(todo._id)}>Delete</Link>\r\n                                        </Table.HeaderCell>\r\n                                    </Table.Row>\r\n                                )\r\n                            })}\r\n                        \r\n                            \r\n                        </Table.Body>\r\n                    </Table>\r\n                    </>\r\n\r\n            }\r\n            \r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport {NotificationManager} from 'react-notifications';\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class ViewTodo extends Component{\r\n\r\n    state={\r\n        data:false\r\n    }\r\n\r\n    componentDidMount(){\r\n     \r\n        axios.get(`https://crud-server.vercel.app/api/todo/${this.props.match.params.id}`)\r\n        .then(response => {\r\n           console.log(response.data.data)\r\n           if(response.data.response){\r\n\r\n             this.setState({\r\n                 data:response.data.data\r\n             })\r\n\r\n           }else{\r\n\r\n            NotificationManager.warning('Wrong ID')\r\n            this.props.history.push('/todolist')\r\n\r\n           }\r\n\r\n        })\r\n\r\n     \r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <>\r\n             <h3>View Todo</h3>\r\n             <br />\r\n             <h5>Name : {this.state.data.name}</h5>\r\n             <h5>Subject : {this.state.data.subject}</h5>\r\n             <h5>Gender : {this.state.data.gender}</h5>\r\n             <h5>About : {this.state.data.about}</h5>\r\n             <br /><br />\r\n             <Link exact to='/todolist'>Go Back</Link>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport {\r\n    Button,\r\n    Form,\r\n    Input,\r\n    TextArea\r\n  } from 'semantic-ui-react'\r\n\r\nimport { NotificationManager } from 'react-notifications'\r\nimport axios from 'axios'\r\n\r\nexport default class EditTodo extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            loadingForm:false\r\n        }\r\n\r\n       this.handleTextChnage = this.handleTextChnage.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        axios.get(`https://crud-server.vercel.app/api/todo/${this.props.match.params.id}`)\r\n        .then(response=>{\r\n            console.log(response.data.response)\r\n            if(response.data.response){\r\n\r\n                this.setState({\r\n                    loadingForm:false,\r\n                    _id:response.data.data._id,\r\n                    name:response.data.data.name,\r\n                    subject:response.data.data.subject,\r\n                    gender:response.data.data.gender,\r\n                    about:response.data.data.about\r\n                })\r\n\r\n            }else{\r\n              \r\n                NotificationManager.warning('Wrong ID')\r\n                this.props.history.push('/todolist')\r\n            }\r\n        })\r\n    \r\n    }\r\n\r\n    handleTextChnage(e){\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) =>{\r\n\r\n        this.setState({\r\n            loadingForm:true\r\n        })\r\n\r\n\r\n\r\n        axios.post('https://crud-server.vercel.app/api/todo/update/todo',this.state)\r\n        .then(response =>{\r\n            console.log(response.data)\r\n            if(response.data.response){\r\n\r\n                this.setState({\r\n                    loadingForm:false,\r\n                    name:'',\r\n                    subject:'Odia',\r\n                    gender:'Male',\r\n                    about:''\r\n                })\r\n\r\n            NotificationManager.success('Success')\r\n            this.props.history.push('/todolist')\r\n\r\n            }else{\r\n\r\n                this.setState({\r\n                    loadingForm:false\r\n                })\r\n\r\n                NotificationManager.warning('Failed')\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n\r\n            <>\r\n             <h3>Edit Todo</h3>\r\n             <Form onSubmit={this.handleSubmit} loading={this.state.loadingForm}> \r\n            \r\n                <Form.Field control={Input} label='Name' placeholder='Name' name='name' value={this.state.name}  onChange={this.handleTextChnage}/>\r\n                <Form.Field label='Subject' control='select' name=\"subject\" value={this.state.subject}  onChange={this.handleTextChnage} >\r\n                    <option value='Math'>Math</option>\r\n                    <option value='English'>English</option>\r\n                    <option value='Odia'>Odia</option>\r\n                    <option value='Hindi'>Hindi</option>\r\n                    <option value='History'>History</option>\r\n                </Form.Field>\r\n\r\n                <Form.Group grouped>\r\n                    <label>Gender</label>\r\n                    <Form.Field\r\n                        label='Male'\r\n                        control='input'\r\n                        type='radio'\r\n                        name='gender'\r\n                        value=\"Male\"\r\n                        checked={this.state.gender==='Male'?true:false}\r\n                        onChange={this.handleTextChnage}\r\n                    />\r\n                    <Form.Field\r\n                        label='Female'\r\n                        control='input'\r\n                        type='radio'\r\n                        name='gender'\r\n                        value=\"Female\"\r\n                        checked={this.state.gender==='Female'?true:false}\r\n                        onChange={this.handleTextChnage}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Field control={TextArea} label='About' placeholder='About' name='about' value={this.state.about} onChange={this.handleTxtChange} />\r\n                <Form.Field control={Button}>Update</Form.Field>\r\n       \r\n            </Form>\r\n            </>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Grid, Button, Form, Input, TextArea } from 'semantic-ui-react'\r\nimport { NotificationManager } from 'react-notifications';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default class Register extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            loadingForm:false,\r\n            name:'',\r\n            email:'',\r\n            gender:'Male',\r\n            phone:'',\r\n            password:'',\r\n            subject:'English',\r\n            address:''\r\n        }\r\n\r\n        this.hanleTextChange = this.hanleTextChange.bind(this)\r\n    }\r\n\r\n    hanleTextChange(e){\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n       \r\n    }\r\n\r\n    handleSubmit = e =>{\r\n\r\n        this.setState({\r\n            loadingForm:true\r\n        })\r\n\r\n        axios.post('https://crud-server.vercel.app/api/user/store',this.state)\r\n        .then(response =>{\r\n            console.log(response)\r\n            if(response.data.response){\r\n                this.setState({\r\n                    loadingForm:false,\r\n                    name:'',\r\n                    email:'',\r\n                    gender:'Male',\r\n                    phone:'',\r\n                    password:'',\r\n                    subject:'English',\r\n                    address:''\r\n                })\r\n\r\n                NotificationManager.success('Success');\r\n                this.props.history.push('/login');\r\n            }else{\r\n                this.setState({loadingForm:false})\r\n                NotificationManager.warning('Email already exists, please try another email id.');\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n            <h1>Register</h1>\r\n\r\n            <Grid>\r\n                <Grid.Row>\r\n                    <Grid.Column width={2}>\r\n\r\n                    </Grid.Column>\r\n\r\n                    <Grid.Column width={12}>\r\n\r\n                        <Form onSubmit={this.handleSubmit} loading={this.state.loadingForm}>\r\n\r\n                            <Form.Group widths={2}>\r\n                              <Form.Field label='Name' control={Input} name='name' placeholder='Name'  value={this.state.name} onChange={this.hanleTextChange} required   />\r\n                              <Form.Field label='Email' control={Input} name='email' placeholder='Email' value={this.state.email} onChange={this.hanleTextChange} required />\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group inline widths={1}>\r\n                                <label>Gender</label>\r\n                                <Form.Field\r\n                                    label='Male'\r\n                                    control='input'\r\n                                    type='radio'\r\n                                    name='gender'\r\n                                    value='Male'\r\n                                    checked={this.state.gender==='Male'?true:false}\r\n                                    onChange={this.hanleTextChange}\r\n                                />\r\n                                <Form.Field\r\n                                    label='Female'\r\n                                    control='input'\r\n                                    type='radio'\r\n                                    name='gender'\r\n                                    value='Female'\r\n                                    checked={this.state.gender==='Female'?true:false}\r\n                                    onChange={this.hanleTextChange}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group widths={2}>\r\n                              <Form.Field label='Phone' control={Input} name='phone' placeholder='Phone' value={this.state.phone} onChange={this.hanleTextChange} required />\r\n                              <Form.Field label='Password' control={Input} name='password' placeholder='Password' value={this.state.password} onChange={this.hanleTextChange} required />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group widths={2}>\r\n\r\n                            <Form.Field label='Subject' control='select' name=\"subject\" value={this.state.subject} onChange={this.hanleTextChange} required >\r\n                                <option value='Math'>Math</option>\r\n                                <option value='English'>English</option>\r\n                                <option value='Odia'>Odia</option>\r\n                                <option value='Hindi'>Hindi</option>\r\n                                <option value='History'>History</option>\r\n                            </Form.Field>  \r\n\r\n                              <Form.Field label='Address' control='TextArea' name='address' placeholder='Address' rows='1' value={this.state.address} onChange={this.hanleTextChange} required />\r\n                             \r\n                            </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <Form.Field control={Button}>Register</Form.Field>\r\n                            </Form.Group>\r\n\r\n                        </Form>\r\n\r\n                    </Grid.Column>\r\n\r\n                </Grid.Row>\r\n            </Grid>\r\n            \r\n\r\n            </>\r\n            \r\n\r\n        );\r\n\r\n    }\r\n\r\n} ","import React, {Component} from 'react';\r\nimport { Grid, Button, Form, Input, TextArea, Icon } from 'semantic-ui-react'\r\nimport { NotificationManager } from 'react-notifications';\r\nimport axios from 'axios';\r\nimport cookie from 'react-cookies'\r\n\r\nexport default class Login extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            loadingForm:false,\r\n            email:'',\r\n            password:''\r\n        }\r\n\r\n        this.hanleTextChange = this.hanleTextChange.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        cookie.remove('userdata', { path: '/' })\r\n        cookie.remove('userlogin', { path: '/' })\r\n        cookie.remove('userid', { path: '/' })\r\n    }\r\n\r\n    hanleTextChange(e){\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n\r\n        console.log(this.state)\r\n       \r\n    }\r\n\r\n    handleSubmit = e =>{\r\n\r\n        this.setState({\r\n            loadingForm:true\r\n        })\r\n\r\n        axios.post('https://crud-server.vercel.app/api/user/login',this.state)\r\n        .then(response =>{\r\n            //console.log(response.data.response)\r\n            if(response.data.response){\r\n                this.setState({\r\n                    loadingForm:false,\r\n                    email:'',\r\n                    password:''\r\n                })\r\n\r\n                cookie.remove('userdata', { path: '/' })\r\n                cookie.remove('userlogin', { path: '/' })\r\n                cookie.remove('userid', { path: '/' })\r\n\r\n                var expires = new Date();\r\n                expires.setSeconds(21600);\r\n                cookie.save('userdata', response.data.data, { path: '/', expires })\r\n                cookie.save('userid', response.data.data._id, { path: '/', expires })\r\n                cookie.save('userlogin', true, { path: '/', expires })\r\n\r\n                NotificationManager.success('Login Success');\r\n                this.props.history.push('/');\r\n            }else{\r\n                \r\n                NotificationManager.warning(response.data.message);\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n            <h1>Login</h1>\r\n\r\n            <Grid>\r\n                <Grid.Row>\r\n                    <Grid.Column width={2}>\r\n\r\n                    </Grid.Column>\r\n\r\n                    <Grid.Column width={12}>\r\n\r\n                        <Form onSubmit={this.handleSubmit} loading={this.state.loadingForm}>\r\n\r\n                            <Form.Group widths={2}>\r\n                              <Form.Field label='Email' control={Input} name='email' placeholder='Email' value={this.state.email} onChange={this.hanleTextChange} required />\r\n                              <Form.Field label='Password' control={Input} name='password' placeholder='Password' value={this.state.password} onChange={this.hanleTextChange} required />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group widths={1}>\r\n                                <Form.Field control={Button}>LogIn</Form.Field>\r\n                            </Form.Group>\r\n\r\n                        </Form>\r\n\r\n                   \r\n                     <Button.Group>\r\n                        <Button>\r\n                        <Icon name='google' color='black' />\r\n                        </Button>\r\n                        <Button.Or />\r\n                        <Button><Icon name='facebook' /></Button>\r\n                        <Button.Or />\r\n                        <Button><Icon name='twitter' /></Button>\r\n                      </Button.Group>\r\n                   \r\n\r\n                    </Grid.Column>\r\n\r\n                    \r\n\r\n                </Grid.Row>\r\n            </Grid>\r\n            \r\n\r\n            </>\r\n            \r\n\r\n        );\r\n\r\n    }\r\n\r\n} ","import React, { Component } from 'react';\r\nimport cookie from 'react-cookies';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport default class EmailVerification extends Component {\r\n\r\n    state={\r\n        data:cookie.load('userlogin'),\r\n        userinfo:cookie.load('userdata')\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n\r\n            <>\r\n             <h2>Email Verification{this.state.data}</h2>\r\n             {this.state.data===undefined\r\n             ?\r\n             <>\r\n             <Link exact to='/login'>Please Login</Link>\r\n             </>\r\n             :\r\n             <>\r\n              <h2>Please click on this link for email verification</h2>\r\n              <Link exact to={`/emailverificationmatch/${this.state.userinfo.email_verification_code}/${this.state.userinfo._id}`}>Verify Email</Link>\r\n             </>\r\n             }\r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { NotificationManager } from 'react-notifications';\r\nimport cookie from 'react-cookies'\r\n\r\n\r\nexport default class EmailVerificationMatch extends Component {\r\n\r\n    state={\r\n        pageLoading:true,\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        var tempData={\r\n            id:this.props.match.params.id,\r\n            code:this.props.match.params.code\r\n        }\r\n\r\n        axios.post('https://crud-server.vercel.app/api/user/checkemailverificationcode',tempData)\r\n        .then(response=>{\r\n            console.log(response.data)\r\n            if(response.data.response){\r\n\r\n                cookie.remove('userdata', { path: '/' })\r\n\r\n\r\n                var expires = new Date();\r\n                expires.setSeconds(21600);\r\n                cookie.save('userdata', response.data.data, { path: '/',expires });\r\n\r\n                NotificationManager.success('Successfully verified');\r\n                this.props.history.push('/')\r\n\r\n            }else{\r\n                NotificationManager.warning(response.data.message);\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            {this.state.pageLoading\r\n            ? <h2>Verifying please wait....</h2>\r\n            :\r\n            <>\r\n\r\n            </>\r\n            }\r\n            </>\r\n        )\r\n    }\r\n}","import 'semantic-ui-css/semantic.min.css'\nimport Body from './include/Body'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport 'react-notifications/lib/notifications.css';\nimport {NotificationContainer} from 'react-notifications';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport {ProtectedRouteUser} from './auth/auth'\n\nimport Home from './pages/Home';\nimport CreateTodo from './pages/CreateTodo';\nimport TodoList from './pages/TodoList';\nimport ViewTodo from './pages/ViewTodo';\nimport EditTodo from './pages/EditTodo';\nimport Register from './pages/Register';\nimport Login from './pages/Login';\nimport EmailVerification from './pages/EmailVerification';\nimport EmailVerificationMatch from './pages/EmailVerificationMatch';\n\nfunction App() {\n  return (\n        \n   <>\n   <Router>\n   <Body>\n     \n      <Switch>\n        <Route exact path='/' component={Home} />\n        <ProtectedRouteUser exact path='/createtodo' component={CreateTodo} /> \n        <ProtectedRouteUser exact path='/todolist' component={TodoList} />\n        <ProtectedRouteUser exact path='/view/:id' component={ViewTodo} />\n        <ProtectedRouteUser exact path='/edit/:id' component={EditTodo} /> \n        <Route exact path='/register' component={Register} />\n        <Route exact path='/login' component={Login} />\n        <Route exact path='/emailverification' component={EmailVerification} />\n        <Route exact path='/emailverificationmatch/:code/:id' component={EmailVerificationMatch} />\n\n      </Switch>\n      <NotificationContainer/>\n   </Body>\n   </Router>\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}